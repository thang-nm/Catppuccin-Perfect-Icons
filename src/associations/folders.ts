export const folders: IconMap = {
  folder_admin: ['admin', 'manager', 'managers', 'moderator', 'moderators'],
  folder_android: ['android', 'apk'],
  folder_angular: ['angular', '.angular'],
  folder_animation: ['anim', 'anims', 'animation', 'animations', 'animated'],
  folder_api: ['api', 'apis', 'restapi'],
  folder_app: ['app', 'apps', 'application', 'project', 'projects'],
  folder_archive: [
    'arc',
    'arcs',
    'archive',
    'archives',
    'archival',
    'bkp',
    'bkps',
    'bak',
    'baks',
    'backup',
    'backups',
    'back-up',
    'back-ups',
    'history',
    'histories',
  ],
  folder_audio: ['aud', 'auds', 'audio', 'audios', 'music', 'sound', 'sounds'],
  folder_aws: ['aws', '.aws', 'amazon', 'ec2'],
  folder_benchmark: [
    'benchmark',
    'benchmarks',
    'performance',
    'measure',
    'measures',
    'measurement',
    'benches',
  ],
  folder_azure_pipelines: ['.azure-pipelines', '.azure-pipelines-ci', 'azure-pipelines'],
  folder_cart: ['cart', 'shopping-cart', 'shopping', 'shop'],
  folder_circle_ci: ['.circleci'],
  folder_client: ['client', 'clients', 'frontend', 'frontends', 'pwa'],
  folder_cloud: ['azure', 'cloud', 'clouds'],
  folder_cocoapods: ['pods'],
  folder_command: ['cmd', 'command', 'commands', 'cli', 'clis'],
  folder_components: ['components', 'widget', 'widgets', 'fragments'],
  folder_composables: [
    'hook',
    'hooks',
    'composable',
    'composables',
    'mixin',
    'mixins',
  ],
  folder_connection: ['connection', 'connections', 'integration', 'integrations', 'url', 'urls'],
  folder_config: [
    'cfg',
    'cfgs',
    'conf',
    'confs',
    'config',
    '.config',
    'configs',
    'configuration',
    'configurations',
    'setting',
    '.setting',
    'settings',
    '.settings',
    'META-INF',
  ],
  folder_constant: ['const', 'constant', 'constants'],
  folder_controllers: [
    'controller',
    'controllers',
    'service',
    'services',
    'provider',
    'providers',
    'handler',
    'handlers',
  ],
  folder_core: ['core'],
  folder_coverage: [
    'coverage',
    'coverages',
    '.nyc-output',
    '.nyc_output',
  ],
  folder_cron: ['cron', 'crontab', 'cronjob', 'cronjobs', 'schedule', 'schedules'],
  folder_cypress: ['cypress', '.cypress'],
  folder_database: ['db', 'database', 'databases', 'sql', 'data', '_data'],
  folder_decorators: ['decorator', 'decorators'],
  folder_debug: ['debug'],
  folder_diff: ['diff', 'diffs', 'patch', 'patches'],
  folder_dist: [
    '.output',
    'dist',
    'out',
    'output',
    'build',
    'release',
    'bin',
    'target',
  ],
  folder_docker: ['docker', 'dockerfiles', '.docker'],
  folder_docs: ['doc', 'docs', 'document', 'documents', 'documentation'],
  folder_download: ['download', 'downloads'],
  folder_environment: [
    '.env',
    '.environment',
    'env',
    'envs',
    'environment',
    'environments',
    '.venv',
  ],
  folder_error: ['error', 'errors', 'err'],
  folder_event: ['event', 'events'],
  folder_examples: [
    'demo',
    'demos',
    'example',
    'examples',
    'sample',
    'samples',
    'sample-data',
  ],
  folder_expo: ['.expo', '.expo-shared'],
  folder_fastlane: ['fastlane'],
  folder_favorite: ['favorite', 'favorites', 'like', 'likes', 'heart', 'hearts'],
  folder_firebase: ['firebase', '.firebase'],
  folder_flow: ['flow-typed'],
  folder_fonts: ['font', 'fonts'],
  folder_functions: [
    'func',
    'funcs',
    'function',
    'functions',
    'lambda',
    'lambdas',
    'logic',
    'math',
    'maths',
    'calc',
    'calcs',
    'calculation',
    'calculations',
  ],
  folder_gamemaker: ['gamemaker', 'gamemaker2'],
  folder_git: ['.git', 'git', 'githooks', '.githooks', 'submodules', '.submodules'],
  folder_github: ['.github'],
  folder_gitlab: ['.gitlab'],
  folder_godot: ['.godot', 'godot', '.godot-cpp', 'godot-cpp'],
  folder_gradle: ['gradle', '.gradle'],
  folder_graphql: ['graphql', 'gql'],
  folder_guard: ['guard', 'guards'],
  folder_gulp: [
    'gulp',
    'gulp-tasks',
    'gulpfile.js',
    'gulpfile.mjs',
    'gulpfile.ts',
    'gulpfile.babel.js',
  ],
  folder_home: ['home', '.home', 'start', '.start'],
  folder_husky: ['husky', '.husky'],
  folder_images: [
    'asset',
    'assets',
    'images',
    'image',
    'imgs',
    'img',
    'icons',
    'icon',
    'icos',
    'ico',
    'figures',
    'figure',
    'figs',
    'fig',
    'screenshot',
    'screenshots',
    'screengrab',
    'screengrabs',
    'pic',
    'pics',
    'picture',
    'pictures',
  ],
  folder_ios: ['ios'],
  folder_java: ['java', 'jar'],
  folder_javascript: ['js', 'javascript', 'javascripts'],
  folder_json: ['json', 'jsons'],
  folder_key: ['key', 'keys', 'token', 'tokens', 'jwt', 'secret', 'secrets'],
  folder_kubernetes: ['kubernetes', '.kubernetes'],
  folder_layouts: ['layout', 'layouts', '_layouts'],
  folder_library: ['lib', 'libs', 'library', 'libraries', 'vendor', 'vendors', 'third-party', 'dll'],
  folder_linux: ['linux', 'unix'],
  folder_link: ['link', 'links', 'shortcut', 'shortcuts'],
  folder_locales: [
    'i18n',
    'internationalization',
    'lang',
    'langs',
    'language',
    'languages',
    'locale',
    'locales',
    'l10n',
    'localization',
    'translation',
    'translate',
    'translations',
  ],
  folder_log: ['log', 'logs', 'report', 'reports'],
  folder_lottie: ['lottie', 'lotties', 'lottiefiles'],
  folder_macos: ['mac', 'macos', 'macosx', 'osx', 'darwin'],
  folder_mail: ['mail', 'mails', 'email', 'emails', 'smtp', 'mailer', 'mailers', 'phpmailer'],
  folder_markdown: ['md', 'markdown', 'markdowns'],
  folder_message: ['message', 'messages', 'forum', 'chat', 'chats', 'conversation', 'conversations'],
  folder_middleware: ['middleware', 'middlewares'],
  folder_mjml: ['mjml'],
  folder_mobile: ['mobile', 'mobiles', 'phone', 'phones'],
  folder_mocks: [
    'mock',
    'mocks',
    'fixture',
    'fixtures',
    'draft',
    'drafts',
    'concept',
    'concepts',
    'sketch',
    'sketches',
    'stub',
    'stubs',
  ],
  folder_mojo: ['mojo'],
  folder_netlify: ['.netlify'],
  folder_next: ['.next'],
  folder_node: ['node_modules', 'node', 'nodejs'],
  folder_nuxt: ['.nuxt', 'nuxt'],
  folder_packages: ['package', 'packages', 'pkg', 'pkgs'],
  folder_pdf: ['pdf', 'pdfs'],
  folder_pdm: ['.pdm-plugins', '.pdm-build'],
  folder_php: ['php'],
  folder_playground: ['playground', 'playgrounds'],
  folder_plugins: [
    'plugin',
    'plugins',
    '_plugins',
    'extension',
    'extensions',
    'addon',
    'addons',
    'module',
    'modules',
  ],
  folder_prisma: ['prisma'],
  folder_private: ['private', '.private'],
  folder_project: ['project', 'projects', '.project', '.projects'],
  folder_proto: ['protobuf', 'protobufs', 'proto', 'protos'],
  folder_public: ['public', 'www', 'wwwroot', 'web', 'website', 'site', 'http', 'webroot'],
  folder_python: ['python', 'python2', 'python3', '.pytest_cache', '__pycache__'],
  folder_queue: ['queue', 'queues', 'bull', 'mq'],
  folder_redux: ['redux'],
  folder_review: ['review', 'reviews', 'revisal', 'revisals', 'reviewed'],
  folder_resource: ['res', 'resource', 'resources', 'static'],
  folder_robot: ['.bot', 'bot', 'bots', '.robot', 'robot', 'robots', '_bot', '_robot'],
  folder_routes: ['route', 'routes', 'router', 'routers', 'navigation', 'navigator', 'navigators'],
  folder_rules: [
    'rule',
    'rules',
    'validation',
    'validations',
    'validator',
    'validators',
  ],
  folder_sass: ['sass', '_sass', 'scss', '_scss'],
  folder_scala: ['scala'],
  folder_scripts: ['scripts', 'script'],
  folder_server: ['server', 'servers', 'backend'],
  folder_serverless: ['serverless', '.serverless'],
  folder_secure: ['auth', 'authentication', 'secure', 'security'],
  folder_shader: ['glsl', 'hlsl', 'shader', 'shaders'],
  folder_share: ['share', 'common'],
  folder_src: ['src', 'srcs', 'source', 'sources', 'code'],
  folder_stencil: ['stencil', '.stencil'],
  folder_storybook: ['.storybook', 'storybook', 'stories', '__stories__'],
  folder_styles: [
    'css',
    'stylesheet',
    'stylesheets',
    'style',
    'styles',
    'theme',
    'themes',
  ],
  folder_supabase: ['supabase', '.supabase'],
  folder_svelte: ['svelte', '.svelte-kit'],
  folder_svg: ['svg', 'svgs'],
  folder_task: ['task', 'tasks'],
  folder_tauri: ['src-tauri', 'tauri'],
  folder_temp: ['temp', 'tmp', 'temporary'],
  folder_templates: ['template', 'templates', '_template', '_templates'],
  folder_terraform: ['terraform', '.terraform'],
  folder_tests: [
    'test',
    'tests',
    'testing',
    '__tests__',
    '__snapshots__',
    '__mocks__',
    '__fixtures__',
    '__test__',
    'spec',
    'specs',
  ],
  folder_types: ['typings', '@types', 'types'],
  folder_typescript: ['typescript', 'ts'],
  folder_unity: ['unity'],
  folder_upload: ['upload', 'uploads'],
  folder_utils: [
    'toolbox',
    'toolboxes',
    'tooling',
    'toolkit',
    'toolkits',
    'tools',
    'util',
    'utilities',
    'utility',
    'utils',
  ],
  folder_vercel: ['vercel', '.vercel', 'now', '.now'],
  folder_video: ['vid', 'vids', 'video', 'videos', 'movie', 'movies', 'media'],
  folder_views: ['view', 'views', 'screen', 'screens', 'page', 'pages', 'html'],
  folder_vscode: ['.vscode', '.vscode-test'],
  folder_vue: ['vue'],
  folder_webpack: ['.webpack', 'webpack'],
  folder_windows: ['windows', 'win', 'win32', 'win64', 'wince'],
  folder_wordpress: ['.wordpress-org', 'wp-content'],
  folder_workflows: ['workflow', 'workflows', 'ci', '.ci'],
  folder_yarn: ['yarn', '.yarn'],
}

export const foldersExpanded: IconMap = Object.entries(folders).reduce(
  (acc, [icon, langs]) => ({ ...acc, [`${icon}__open`]: langs }),
  {},
)
